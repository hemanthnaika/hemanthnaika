# GitHub Action for generating a contribution graph with a snake eating your contributions.
name: Generate Snake

permissions:
  contents: write  # Ensure write permissions for pushing changes

# Controls when the action will run.
on:
  schedule:
      # every 12 hours
    - cron: "0 */12 * * *"

  # This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:
  
  # Also run on every push on the main branch
  push:
    branches:
    - main

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v3
    
      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify output directory
        run: |
          mkdir -p dist
          ls dist
      
      - name: Configure Git user
        run: |
          git config --global user.email "hemanthnaika22@gmail.com"
          git config --global user.name "hemanthnaika"

      - name: Create `output` branch if it doesn't exist
        run: |
          git fetch origin
          git checkout -b output || git checkout output

      - name: Show build status
        run: git status

      - name: Push new snake files to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output  # The branch to push to
          build_dir: dist  # Directory containing the snake output
          commit_message: "Update snake animation"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Git
        run: |
          git remote -v
          git branch
          git status
